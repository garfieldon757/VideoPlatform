package com.videoPlatform.model;
// Generated 2016-12-27 14:58:57 by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * TblUser generated by hbm2java
 */
@Entity
@Table(name = "tbl_user", catalog = "videoplatform")
public class TblUser implements java.io.Serializable {

	private String userId;
	private TblRole tblRole;
	private String userNickName;
	private String userSex;
	private String userBirthPlace;
	private String userAvatarImfLink;
	private String userEmail;
	private String userPhoneNumber;
	private String userPassword;
	private Date userBirthDate;
	@JsonIgnore
	private Set<TblVideo> tblVideos = new HashSet<TblVideo>(0);
	@JsonIgnore
	private Set<TblUserpicture> tblUserpictures = new HashSet<TblUserpicture>(0);
	@JsonIgnore
	private Set<TblComment> tblComments = new HashSet<TblComment>(0);
	@JsonIgnore
	private Set<TblUservideorelation> tblUservideorelations = new HashSet<TblUservideorelation>(0);
	@JsonIgnore
	private Set<TblUserlog> tblUserlogs = new HashSet<TblUserlog>(0);
	@JsonIgnore
	private Set<TblVideotagrelation> tblVideotagrelations = new HashSet<TblVideotagrelation>(0);

	public TblUser() {
	}

	public TblUser(String userId) {
		this.userId = userId;
	}

	public TblUser(String userId, TblRole tblRole, String userNickName, String userSex, String userBirthPlace,
			String userAvatarImfLink, String userEmail, String userPhoneNumber, String userPassword, Date userBirthDate,
			Set<TblVideo> tblVideos, Set<TblUserpicture> tblUserpictures, Set<TblComment> tblComments,
			Set<TblUservideorelation> tblUservideorelations, Set<TblUserlog> tblUserlogs,
			Set<TblVideotagrelation> tblVideotagrelations) {
		this.userId = userId;
		this.tblRole = tblRole;
		this.userNickName = userNickName;
		this.userSex = userSex;
		this.userBirthPlace = userBirthPlace;
		this.userAvatarImfLink = userAvatarImfLink;
		this.userEmail = userEmail;
		this.userPhoneNumber = userPhoneNumber;
		this.userPassword = userPassword;
		this.userBirthDate = userBirthDate;
		this.tblVideos = tblVideos;
		this.tblUserpictures = tblUserpictures;
		this.tblComments = tblComments;
		this.tblUservideorelations = tblUservideorelations;
		this.tblUserlogs = tblUserlogs;
		this.tblVideotagrelations = tblVideotagrelations;
	}

	@Id

	@Column(name = "user_ID", unique = true, nullable = false)
	public String getUserId() {
		return this.userId;
	}

	public void setUserId(String userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "role_ID")
	public TblRole getTblRole() {
		return this.tblRole;
	}

	public void setTblRole(TblRole tblRole) {
		this.tblRole = tblRole;
	}

	@Column(name = "user_nickName")
	public String getUserNickName() {
		return this.userNickName;
	}

	public void setUserNickName(String userNickName) {
		this.userNickName = userNickName;
	}

	@Column(name = "user_sex")
	public String getUserSex() {
		return this.userSex;
	}

	public void setUserSex(String userSex) {
		this.userSex = userSex;
	}

	@Column(name = "user_birthPlace")
	public String getUserBirthPlace() {
		return this.userBirthPlace;
	}

	public void setUserBirthPlace(String userBirthPlace) {
		this.userBirthPlace = userBirthPlace;
	}

	@Column(name = "user_avatarImfLink")
	public String getUserAvatarImfLink() {
		return this.userAvatarImfLink;
	}

	public void setUserAvatarImfLink(String userAvatarImfLink) {
		this.userAvatarImfLink = userAvatarImfLink;
	}

	@Column(name = "user_email")
	public String getUserEmail() {
		return this.userEmail;
	}

	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}

	@Column(name = "user_phoneNumber")
	public String getUserPhoneNumber() {
		return this.userPhoneNumber;
	}

	public void setUserPhoneNumber(String userPhoneNumber) {
		this.userPhoneNumber = userPhoneNumber;
	}

	@Column(name = "user_password")
	public String getUserPassword() {
		return this.userPassword;
	}

	public void setUserPassword(String userPassword) {
		this.userPassword = userPassword;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "user_birthDate", length = 10)
	public Date getUserBirthDate() {
		return this.userBirthDate;
	}

	public void setUserBirthDate(Date userBirthDate) {
		this.userBirthDate = userBirthDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblVideo> getTblVideos() {
		return this.tblVideos;
	}

	public void setTblVideos(Set<TblVideo> tblVideos) {
		this.tblVideos = tblVideos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblUserpicture> getTblUserpictures() {
		return this.tblUserpictures;
	}

	public void setTblUserpictures(Set<TblUserpicture> tblUserpictures) {
		this.tblUserpictures = tblUserpictures;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblComment> getTblComments() {
		return this.tblComments;
	}

	public void setTblComments(Set<TblComment> tblComments) {
		this.tblComments = tblComments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblUservideorelation> getTblUservideorelations() {
		return this.tblUservideorelations;
	}

	public void setTblUservideorelations(Set<TblUservideorelation> tblUservideorelations) {
		this.tblUservideorelations = tblUservideorelations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblUserlog> getTblUserlogs() {
		return this.tblUserlogs;
	}

	public void setTblUserlogs(Set<TblUserlog> tblUserlogs) {
		this.tblUserlogs = tblUserlogs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tblUser")
	public Set<TblVideotagrelation> getTblVideotagrelations() {
		return this.tblVideotagrelations;
	}

	public void setTblVideotagrelations(Set<TblVideotagrelation> tblVideotagrelations) {
		this.tblVideotagrelations = tblVideotagrelations;
	}

}
